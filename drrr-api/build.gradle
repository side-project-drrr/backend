dependencies {
    implementation project(path: ':drrr-core')
    implementation project(path: ':drrr-infra')
    implementation project(path: ':drrr-domain')
    implementation project(path: ':drrr-domain-redis')

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    //스프링 시큐리티
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'
    //implementation group: 'org.springframework.boot', name: 'spring-boot-docker-compose', version: '3.1.1'
    //swagger
    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.2.0'

    //gson
    implementation 'com.google.code.gson:gson:2.8.8'
    //json Parser
    implementation 'org.json:json:20210307'
    /*jwt 끝*/
    // 카카오 API 및 인증 처리 라이브러리
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    // oauth security nimbus jose jwt
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    //쿼리를 잘 알아보게 해준다.
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.8'
    //logback 관련 라이브러리
    implementation group: 'com.github.maricn', name: 'logback-slack-appender', version: '1.6.1'
    //카프카
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'com.h2database:h2:1.4.199'

    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'io.rest-assured:rest-assured:5.3.1'


    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

}


bootJar {
    enabled = true
}


// api 모듈에서 domain 모듈의 test 폴더 내에 fixture 클래스를 사용하기 위함
dependencies {
    testImplementation project(path: ':drrr-domain', configuration: 'archives')
}
task copyGitSubmodule(type: Copy) {
    from './src/main/resources/security-storage-api/config'
    include 'application-master.yml'
    into './src/main/resources'
}